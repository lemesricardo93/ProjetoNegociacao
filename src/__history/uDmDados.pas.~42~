unit uDmDados;

interface

uses
   System.SysUtils, System.Classes, Data.DB, IBDatabase, forms, System.IniFiles,
  dialogs, IBCustomDataSet, IBQuery, Datasnap.DBClient;

type
  TdmDados = class(TDataModule)
    IBDatabase: TIBDatabase;
    ibTransacaoSistema: TIBTransaction;
    ibqueryDistribuidor: TIBQuery;
    ibqueryProdutor: TIBQuery;
    cdsProduorLimite: TClientDataSet;
    dtSourceProdutoLimite: TDataSource;
    cdsProduorLimitecodigoProdutor: TIntegerField;
    cdsProduorLimitecodigoDistribuidor: TIntegerField;
    cdsProduorLimitevalorLimite: TFloatField;
    ibqueryProdutorLimite: TIBQuery;
    ibqueryProduto: TIBQuery;
    ItemNegociacao: TClientDataSet;
    DataSource1: TDataSource;
    procedure DataModuleCreate(Sender: TObject);
    procedure DataModuleDestroy(Sender: TObject);
  private

  function LeIni(strArqIni, strSecao, strVariavel: string): string; overload;
function LeIni(strArqIni, strSecao, strVariavel, strDefault: string): string; overload;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dmDados: TdmDados;

implementation

{%CLASSGROUP 'System.Classes.TPersistent'}

{$R *.dfm}

procedure TdmDados.DataModuleCreate(Sender: TObject);
var
  WFile: TIniFile;
  strCaminho: string;
begin
  try
    try
      strCaminho :=(ExtractFilePath(Application.exeName) + 'negociacao.ini');
      if (not FileExists(strCaminho)) then
      begin
      //  WFile := TIniFile.Create(ExtractFilePath(Application.ExeName) + 'CnfConsulta.ini');
        WFile.WriteString('negociacao.ini','ConfiguracaoLocal', 'CaminhoBanco');
      end;
    except
      on E: Exception do
      begin
        ShowMessage('Erro ao Criar Arquivo ini ' + 'motivo:' + E.message);
      end;
    end;
  finally
    try
      IBDatabase.Connected := False;
      IBDatabase.DataBaseName := LeIni('negociacao.ini', 'ConfiguracaoLocal',
        'CaminhoBanco');
      IBDatabase.LoginPrompt := False;
      IBDatabase.Connected := True;
    except
      on E: Exception do
      begin
        ShowMessage('Erro ao Conectar no Banco' + 'Motivo' + E.message);
      end;
    end;
  end;
  cdsProduorLimite.CreateDataSet;
END;

function TdmDados.LeIni(strArqIni, strSecao, strVariavel: string): string;
var
  objArqIni: TIniFile;
  strString: string;
begin
  Result := '';
  objArqIni := tIniFile.Create(ExtractFilePath(Application.ExeName) + '/' + strArqIni);
  try
    Result := objArqIni.ReadString(strSecao, strVariavel, strString);
  finally
    objArqIni.Free;
  end;
end;

procedure TdmDados.DataModuleDestroy(Sender: TObject);
begin
  cdsProduorLimite.Destroy;
end;

function TdmDados.LeIni(strArqIni, strSecao, strVariavel,
  strDefault: string): string;
var
  objArqIni: TIniFile;
begin
  Result := '';
  //objArqIni := tIniFile.Create(GetCurrentDir + '/' + strArqIni);
  objArqIni := tIniFile.Create(ExtractFilePath(Application.ExeName) + '/' + strArqIni);
  try
    Result := objArqIni.ReadString(strSecao, strVariavel, strDefault);
  finally
    objArqIni.Free;
  end;
end;
end.
